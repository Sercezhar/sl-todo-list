.wrapper {
  position: relative;
  width: fit-content;
}

.button,
.radioGroup {
  background-color: var(--white-color);
  border: var(--border-main);
  border-radius: 0.5em;
}

.button,
.radioLabel {
  font-size: 14px;
  outline: none;
  cursor: pointer;
  transition: background 250ms var(--transition);
}

.button:hover,
.radioLabel:hover {
  background-color: var(--secondary-color);
}

.button {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.6rem 0.8rem;
  width: fit-content;
  font-family: 'Open Sans', sans-serif;
}

@media screen and (min-width: 768px) {
  .button {
    width: 120px;
  }
}

.button:focus {
  box-shadow: var(--box-shadow-focus);
  background-color: var(--secondary-color);
}

.arrowIcon {
  rotate: -90deg;
  transition: rotate 150ms var(--transition);
}

.arrowIcon.rotate {
  rotate: 90deg;
}

.radioGroup {
  display: flex;
  flex-direction: column;
  position: absolute;
  left: 0;
  top: calc(100% + 0.6rem);
  min-width: 220px;
  border-radius: 0.5em;
  overflow: hidden;
  box-shadow: var(--box-shadow-main);
  transition: opacity 250ms var(--transition);
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  z-index: 2;
}

.radioGroup.show {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
}

.radioLabel {
  position: relative;
  display: flex;
  align-items: center;
  padding: 0.8rem 0.6rem;
}

.radioLabel:not(:last-child) {
  border-bottom: 1px solid #ccc;
}

.radioLabel:focus {
  z-index: 2;
}

/* custom radio button */

.radioInput {
  appearance: none;
  display: grid;
  place-content: center;
  margin: 0;
  margin-right: 0.4em;
  width: 1.3em;
  height: 1.3em;
  background-color: #fff;
  border: 1px solid var(--radio-border-color);
  border-radius: 50%;
  outline: none;
}

.radioInput:focus {
  box-shadow: var(--box-shadow-focus);
}

.radioInput::before {
  content: '';
  width: 0.7em;
  height: 0.7em;
  background-color: var(--accent-color);
  border-radius: 50%;
  scale: 0;
  transition: scale 250ms var(--transition);
}

.radioInput:checked::before {
  scale: 1;
}
